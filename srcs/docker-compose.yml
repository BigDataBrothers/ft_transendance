
services:
  web:
    build: .
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py migrate &&
              python manage.py collectstatic --no-input &&
              gunicorn django_project.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - default
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - default

  db:
    image: postgres:14
    networks:
      - default
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432" # Exposer le port PostgreSQL

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  default:
    name: django-network
